//
//  WDRegisterCardView.m
//  TangTradePlatform
//
//  Created by ctcios2 on 2017/9/21.
//  Copyright © 2017年 com.tang.trade. All rights reserved.
//

#import "WDRegisterCardView.h"
#import "NSString+changeTest.h"

@interface WDRegisterCardView ()
@property (weak, nonatomic) IBOutlet UIButton *backButton;
@property (weak, nonatomic) IBOutlet UITextField *userNameTextField;
@property (weak, nonatomic) IBOutlet UITextField *passwordTextField;
@property (weak, nonatomic) IBOutlet UILabel *passwordValidLabel;
@property (weak, nonatomic) IBOutlet UIImageView *passwordSeeImageView;
@property (weak, nonatomic) IBOutlet UIButton *passwordSeeButton;
@property (weak, nonatomic) IBOutlet UITextField *confirmPasswordTextField;
@property (weak, nonatomic) IBOutlet UILabel *confirmPasswordValidLabel;
@property (weak, nonatomic) IBOutlet UIImageView *confirmPasswordSeeImageView;
@property (weak, nonatomic) IBOutlet UIButton *confirmPasswordSeeButton;
@property (weak, nonatomic) IBOutlet UIButton *registerButton;

@property (nonatomic,strong) WDRegisterViewModel *viewModel;

@end

@implementation WDRegisterCardView

- (void)awakeFromNib {
    [super awakeFromNib];
    [_registerButton setBackgroundImage:[UIImage imageNamed:@"Login_button_enable"] forState:(UIControlStateNormal)];
    [_registerButton setBackgroundImage:[UIImage imageNamed:@"Login_button_disable"] forState:(UIControlStateDisabled)];
}

- (void)bindViewModel:(WDRegisterViewModel *)viewModel {
    _viewModel = viewModel;
    
    [self modelChanged];
    
    [self.userNameTextField.rac_textSignal subscribeNext:^(NSString *name) {
        self.userNameTextField.text = [self.userNameTextField.text changeTest];
        
        if (self.userNameTextField.text.length > 20) {
            self.userNameTextField.text = [self.userNameTextField.text substringToIndex:20];
        }
        
        viewModel.userName = self.userNameTextField.text;
    }];
    @weakify(self);
    [[self.passwordTextField rac_signalForControlEvents:(UIControlEventEditingDidBegin)] subscribeNext:^(id x) {
        @strongify(self);
        self.viewModel.hiddenLabel = NO;
    }];
    [RACObserve(self.viewModel, hiddenLabel) subscribeNext:^(NSNumber *x) {
        @strongify(self);
        if ([x boolValue]) {
            self.passwordValidLabel.hidden = YES;
            self.confirmPasswordValidLabel.hidden = YES;
        }
    }];
    
    [self.passwordTextField.rac_textSignal subscribeNext:^(NSString *text) {
        @strongify(self);
        
        if (text.length > 18) {
            text = [text substringFromIndex:18];
        }
        viewModel.password = text;
        
        if (!self.viewModel.hiddenLabel) {
            self.passwordValidLabel.hidden = [text availableTest];
            
            if (self.viewModel.confirmPassword.length) {
                self.confirmPasswordValidLabel.hidden = [text isEqualToString:self.viewModel.confirmPassword];
            }
        }else {
            self.passwordValidLabel.hidden = YES;
        }
    }];
    
    [self.confirmPasswordTextField.rac_textSignal subscribeNext:^(NSString *text) {
        @strongify(self);
        if (text.length > 18) {
            text = [text substringToIndex:18];
        }
        viewModel.confirmPassword = text;
        if (!self.viewModel.hiddenLabel && viewModel.confirmPassword.length != 0) {
            self.confirmPasswordValidLabel.hidden = [text isEqualToString:self.viewModel.password];
        }else {
            self.confirmPasswordValidLabel.hidden = YES;
        }
    }];
    
    RAC(self.registerButton,enabled) = [RACSignal combineLatest:@[RACObserve(self.viewModel,userName),RACObserve(self.viewModel, password),RACObserve(self.viewModel, confirmPassword)] reduce:^id(NSString *userName,NSString *password,NSString *confirmPassword){
        return @(userName.length > 0 && password.length > 7 && confirmPassword.length > 7);
    }];
    
    [[self.passwordSeeButton rac_signalForControlEvents:(UIControlEventTouchUpInside)] subscribeNext:^(id x) {
        @strongify(self);
        [self setWithTextField:self.passwordTextField toImageView:self.passwordSeeImageView];
    }];
    
    [[self.confirmPasswordSeeButton rac_signalForControlEvents:(UIControlEventTouchUpInside)] subscribeNext:^(id x) {
        @strongify(self);
        
        [self setWithTextField:self.confirmPasswordTextField toImageView:self.confirmPasswordSeeImageView];
    }];
    
    [[self.backButton rac_signalForControlEvents:(UIControlEventTouchUpInside)] subscribeNext:^(id x) {
        [viewModel.backSubject sendNext:x];
    }];
    
    [[self.registerButton rac_signalForControlEvents:(UIControlEventTouchUpInside)] subscribeNext:^(id x) {
        [viewModel.registerSubject sendNext:x];
    }];
}

- (void)modelChanged {
    @weakify(self);
    [RACObserve(_viewModel, userName) subscribeNext:^(NSString *text) {
        @strongify(self);
        self.userNameTextField.text = text;
        
    }];
    
    [RACObserve(_viewModel, password) subscribeNext:^(NSString *text) {
        @strongify(self);
        self.passwordTextField.text = text;
    }];
    
    [RACObserve(_viewModel, confirmPassword) subscribeNext:^(NSString *text) {
        @strongify(self);
        self.confirmPasswordTextField.text = text;
    }];
}

- (void)setWithTextField:(UITextField *)textField toImageView:(UIImageView *)imageView{
    BOOL isSec = !textField.secureTextEntry;
    
    NSString *imageName = [NSString stringWithFormat:@"eye_%@",isSec?@"close":@"open"];
    
    imageView.image = [UIImage imageNamed:imageName];
    
    textField.secureTextEntry = isSec;
}

@end
